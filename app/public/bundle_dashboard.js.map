{"version":3,"file":"bundle_dashboard.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAa;;AAEiE;AACb;AACG;AAC/B;AACC;AAC0B;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,2DAAK;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,gFAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,gCAAgC,sFAAe;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,0BAA0B,+EAAS;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,2DAAK;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,IAAI,iEAAW;;AAEf,4BAA4B,4CAA4C;AACxE;AACA,KAAK;AACL,0BAA0B,0CAA0C;AACpE;AACA,KAAK;;AAEL,sBAAsB,qDAAc;AACpC;;AAEA;AACA,MAAM,2DAAK;AACX,MAAM,gEAAU;AAChB;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,2DAAK;AACT,IAAI,gEAAU;AACd;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,iDAAiD;AAC7D;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,0CAAG;AACzB;;AAEA;AACA,MAAM,2DAAK;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AC5Ua;;AAEgD;AACxB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wBAAwB,oDAAO;AAC9C,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,aAAa,yEAAW;AACxB,aAAa,4EAAc;AAC3B,gBAAgB,qEAAO;;AAEvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,uEAAS;AAC5B;;AAEA;AACA;AACA;AACA;AACA,OAAO,GAAG,oBAAoB,GAAG,wBAAwB;AACzD;AACA;AACA,yCAAyC,wBAAwB;;AAEjE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,2EACD;AACjB;AACA,4BAA4B,uBAAuB,IAAI,gBAAgB;;AAEvE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yEACH;AACf;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uEAAS;AAC3B,kBAAkB,uEAAS;AAC3B;AACA;;;;;;;;;;;;;;;;;;;;;;ACtJa;;AAEgD;AACxB;;AAEtB,0BAA0B,oDAAO;AAChD,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,aAAa,4EAAc;AAC3B,aAAa,4EAAc;;AAE3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2EAAa;AAC/B;;AAEA,kBAAkB,yEAAW;AAC7B;;AAEA;AACA,oBAAoB,uEAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,kBAAkB,uEAAS;AAC3B,kBAAkB,uEAAS;AAC3B;AACA;;;;;;;;;;;;;;;;;;;;;;ACpFa;;AAEgD;AACxB;;AAEtB,8BAA8B,oDAAO;AACpD,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,aAAa,4EAAc;AAC3B,aAAa,0EAAY;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,sEAAQ;AAC1B;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,uEAAS;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,kBAAkB,yEACH;AACf;AACA;AACA;;AAEA;AACA,sBAAsB,oEAAM;AAC5B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7Ha;;AAEgD;;AAE9C;AACf,sBAAsB;AACtB,YAAY,4DAA4D;;AAExE,kBAAkB,uEAAS;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,6EAAe;;AAEhC,kBAAkB,UAAU;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA,0BAA0B;AAC1B,YAAY,OAAO;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,MAAM;AACnD;;AAEA;AACA;AACA,8BAA8B,oCAAoC;;AAElE;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,YAAY,iCAAiC;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B,IAAI,0BAA0B;AAC9E;;AAEA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7Qa;;AAEb,6BAAe,oCAAU;AACzB;;AAEA;;AAEA;AACA,yCAAyC,KAAK;;AAE9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;AClBa;;AAEN;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP,sDAAsD,MAAM,OAAO,IAAI;;AAEvE;AACA;;AAEO;AACP,qDAAqD,MAAM,OAAO,IAAI;;AAEtE;AACA;;AAEO;AACP,qDAAqD,MAAM,OAAO,IAAI;;AAEtE;AACA;;AAEO;AACP,+CAA+C,MAAM,OAAO,IAAI;;AAEhE;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;ACrEa;;AAEN;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://knightsedge/./app/src/js/dashboard.js","webpack://knightsedge/./app/src/js/data-visuals/chart-types/line-chart.js","webpack://knightsedge/./app/src/js/data-visuals/chart-types/scatterplot.js","webpack://knightsedge/./app/src/js/data-visuals/chart-types/stacked-bar-chart.js","webpack://knightsedge/./app/src/js/data-visuals/data-viz.js","webpack://knightsedge/./app/src/js/utils/alert.js","webpack://knightsedge/./app/src/js/utils/api.js","webpack://knightsedge/./app/src/js/utils/formHelper.js","webpack://knightsedge/external module \"https://cdn.jsdelivr.net/npm/d3@7/+esm\"","webpack://knightsedge/webpack/bootstrap","webpack://knightsedge/webpack/runtime/async module","webpack://knightsedge/webpack/runtime/define property getters","webpack://knightsedge/webpack/runtime/hasOwnProperty shorthand","webpack://knightsedge/webpack/runtime/make namespace object","webpack://knightsedge/webpack/before-startup","webpack://knightsedge/webpack/startup","webpack://knightsedge/webpack/after-startup"],"sourcesContent":["\"use strict\";\n\nimport StackedBarChart from \"./data-visuals/chart-types/stacked-bar-chart.js\";\nimport LineChart from \"./data-visuals/chart-types/line-chart.js\";\nimport Scatterplot from \"./data-visuals/chart-types/scatterplot.js\";\nimport alert from \"./utils/alert.js\";\nimport * as api from \"./utils/api.js\";\nimport { disableForm, enableForm } from \"./utils/formHelper.js\";\n\nclass Dashboard {\n  constructor(dashboard) {\n    if (!dashboard) this.abort();\n\n    this.dashboard = dashboard;\n    this.availVizMap = new Map();\n    this.startDateStr = null;\n    this.endDateStr = null;\n    this.monthAbbr = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    this.init();\n  }\n\n  // INITIALIZATION\n\n  init() {\n    this.highlights = document.getElementById(\"highlights\");\n    this.sidebar = document.getElementById(\"sidebar\");\n    this.main = document.getElementById(\"main\");\n    this.configForm = document.getElementById(\"config-form\");\n\n    if (!this.highlights || !this.sidebar || !this.main) this.abort();\n\n    this.initializeOpeningStats();\n    this.initializeRatingTrends();\n    this.initializeDurationStats();\n\n    this.updateConfigDateRange(new Date());\n    this.beginListening();\n  }\n\n  abort() {\n    alert(\"error\", \"Oops! Please try again later.\");\n    throw new Error(\"Oops! Please try again later\");\n  }\n\n  beginListening() {\n    this.sidebar.addEventListener(\"click\", this.handleClickSidebar.bind(this));\n    this.configForm.addEventListener(\n      \"submit\",\n      this.handleSubmitConfigure.bind(this)\n    );\n\n    window\n      .matchMedia(\"(max-width: 70em)\")\n      .addEventListener(\"change\", this.handleChangeMQ70.bind(this));\n    window\n      .matchMedia(\"(max-width: 60em)\")\n      .addEventListener(\"change\", this.handleChangeMQ70.bind(this));\n    window\n      .matchMedia(\"(max-width: 34em)\")\n      .addEventListener(\"change\", this.handleChangeMQ34.bind(this));\n  }\n\n  initializeDurationStats() {\n    const durationStats = document.getElementById(\"match-duration-analysis\");\n\n    const scatterplot = new Scatterplot(\n      JSON.parse(durationStats.dataset.graphOptions)\n    );\n    scatterplot.createLegend(\"circle\", \"after\");\n    scatterplot.createAxisLabel({\n      x: \"Match length (minutes)\",\n      y: \"# of moves\",\n    });\n\n    this.availVizMap.set(durationStats.id, {\n      startDateStr: null,\n      endDateStr: null,\n      viz: scatterplot,\n    });\n  }\n\n  initializeOpeningStats() {\n    const openingStats = document.getElementById(\"opening-statistics\");\n\n    const stackedBarChart = new StackedBarChart(\n      JSON.parse(openingStats.dataset.graphOptions)\n    );\n    stackedBarChart.createLegend(\"rect\");\n    stackedBarChart.initializeTooltip(stackedBarChart.canvas, \"bar\");\n\n    this.availVizMap.set(openingStats.id, {\n      startDateStr: null,\n      endDateStr: null,\n      viz: stackedBarChart,\n    });\n  }\n\n  initializeRatingTrends() {\n    const ratingTrends = document.getElementById(\"rating-trends\");\n\n    const lineChart = new LineChart(\n      JSON.parse(ratingTrends.dataset.graphOptions)\n    );\n    lineChart.initializeTooltip(lineChart.canvas, \"circle\");\n\n    this.availVizMap.set(ratingTrends.id, {\n      startDateStr: null,\n      endDateStr: null,\n      viz: lineChart,\n    });\n  }\n\n  // EVENT LISTENERS\n\n  async handleClickSidebar(e) {\n    e.preventDefault();\n    this.toggleSidebar();\n\n    const clicked = e.target;\n    if (clicked.nodeName !== \"BUTTON\" || clicked.classList.contains(\"active\"))\n      return;\n    if (!this.dashConfigured()) {\n      alert(\"error\", \"You must first configure the dashboard.\");\n      return;\n    }\n\n    const content = this.displayClickedContent(clicked);\n    const action = content.dataset.graphAction;\n    if (!action) {\n      this.activateClickedBtn(clicked);\n      return;\n    }\n\n    await this.updateDataViz(content, action);\n    this.activateClickedBtn(clicked);\n  }\n\n  handleChangeMQ70(e) {\n    if (!this.dashConfigured()) return;\n\n    this.availVizMap.forEach((viz) => {\n      if (!viz.startDateStr || !viz.endDateStr) return;\n      viz.viz.updateGraphData();\n    });\n  }\n\n  handleChangeMQ60(e) {\n    if (!this.dashConfigured()) return;\n\n    this.availVizMap.forEach((viz) => {\n      if (!viz.startDateStr || !viz.endDateStr) return;\n      viz.viz.updateGraphData();\n    });\n  }\n\n  handleChangeMQ34(e) {\n    if (!this.dashConfigured()) return;\n\n    this.availVizMap.forEach((viz) => {\n      if (!viz.startDateStr || !viz.endDateStr) return;\n      viz.viz.updateGraphData();\n    });\n  }\n\n  async handleSubmitConfigure(e) {\n    e.preventDefault();\n\n    const form = e.target;\n    disableForm(form, \"Generating dashboard...\");\n\n    const startDateStr = `${document.getElementById(\"start-year\").value}-${\n      document.getElementById(\"start-month\").value\n    }`;\n    const endDateStr = `${document.getElementById(\"end-year\").value}-${\n      document.getElementById(\"end-month\").value\n    }`;\n\n    const res = await api.getRefresh(startDateStr, endDateStr);\n    const data = await res.json();\n\n    if (!res.ok || res.status !== 200) {\n      alert(\"error\", data.message);\n      enableForm(form, \"Generate\");\n      return;\n    }\n\n    this.startDateStr = startDateStr;\n    this.endDateStr = endDateStr;\n\n    this.updateHighlightsPanel(data.data);\n    alert(\"success\", \"Success! You may now choose a data visualization.\");\n    enableForm(form, \"Generate\");\n    this.toggleSidebar();\n  }\n\n  // UI CONTROLLERS\n\n  activateClickedBtn(clickedBtn) {\n    const btnList = this.sidebar.querySelectorAll(\".sidebar-btn\");\n\n    btnList.forEach((btnEl) => btnEl.classList.remove(\"active\"));\n    clickedBtn.classList.add(\"active\");\n  }\n\n  displayClickedContent(clickedBtn) {\n    let activatedContent;\n    const contentId = clickedBtn.dataset.display;\n    const contentList = this.main.querySelectorAll(\".main-content\");\n\n    contentList.forEach((content) => {\n      if (content.id === contentId) {\n        content.classList.remove(\"hidden\");\n        activatedContent = content;\n      } else content.classList.add(\"hidden\");\n    });\n\n    return activatedContent;\n  }\n\n  toggleSidebar() {\n    if (window.getComputedStyle(this.sidebar).position !== \"fixed\") return;\n\n    this.sidebar.classList.toggle(\"open\");\n  }\n\n  updateConfigDateRange(startDate) {\n    let month = (startDate.getMonth() + 1).toString();\n    if (month.length === 1) month = \"0\" + month;\n    const year = startDate.getFullYear();\n\n    document.getElementById(\"start-month\").value = month;\n    document.getElementById(\"start-year\").value = year;\n    document.getElementById(\"end-month\").value = month;\n    document.getElementById(\"end-year\").value = year;\n  }\n\n  updateHighlightsPanel(obj) {\n    const { username, startDateStr, endDateStr, highlights } = obj;\n    const startDate = new Date(startDateStr);\n    const endDate = new Date(endDateStr);\n\n    const startAbbr = this.getAbbreviatedDate(startDate);\n    const endAbbr = this.getAbbreviatedDate(endDate);\n\n    this.highlights.querySelector(\".highlight-user\").textContent = username;\n\n    this.highlights.querySelector(\".highlight-from\").textContent = startAbbr;\n    this.highlights.querySelector(\".highlight-to\").textContent = endAbbr;\n\n    this.highlights.querySelector(\".highlight-total\").textContent =\n      highlights?.total || 0;\n    this.highlights.querySelector(\".highlight-wins\").textContent =\n      highlights?.wins || 0;\n    this.highlights.querySelector(\".highlight-draws\").textContent =\n      highlights?.draws || 0;\n    this.highlights.querySelector(\".highlight-losses\").textContent =\n      highlights?.losses || 0;\n  }\n\n  // DATA VIZ GENERATION\n\n  async updateDataViz(content, action) {\n    const contentId = content.id;\n    let viz = this.availVizMap.get(contentId);\n\n    if (!this.dashConfigured()) return;\n    if (\n      viz.startDateStr === this.startDateStr &&\n      viz.endDateStr === this.endDateStr\n    )\n      return;\n\n    const res = await api[action](this.startDateStr, this.endDateStr);\n    const data = await res.json();\n\n    if (!res.ok || res.status !== 200) {\n      alert(\"error\", data.message);\n      return;\n    }\n\n    switch (content.dataset.graphType) {\n      case \"stackedBarChart\":\n        viz.viz.bindData(data.data.openingStats);\n        break;\n      case \"lineChart\":\n        const ratingTrends = data.data.ratingTrends;\n        ratingTrends.forEach((el) => (el.date = new Date(el.date)));\n\n        viz.viz.bindData(ratingTrends);\n        break;\n      case \"scatterplot\":\n        const durationStats = data.data.durationStats;\n        durationStats.forEach((el) => (el.match_length = el.match_length / 60));\n\n        viz.viz.bindData(durationStats);\n        break;\n    }\n\n    viz.startDateStr = this.startDateStr;\n    viz.endDateStr = this.endDateStr;\n  }\n\n  // UTILITIES\n\n  dashConfigured() {\n    if (this.startDateStr && this.endDateStr) return true;\n    return false;\n  }\n\n  getAbbreviatedDate(date) {\n    return (\n      this.monthAbbr[date.getUTCMonth()] +\n      \" '\" +\n      date.getUTCFullYear().toString().slice(-2)\n    );\n  }\n}\n\nnew Dashboard(document.getElementById(\"dashboard\"));\n","\"use strict\";\n\nimport * as d3 from \"https://cdn.jsdelivr.net/npm/d3@7/+esm\";\nimport DataViz from \"../data-viz.js\";\n\nconst monthRef = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport default class LineChart extends DataViz {\n  constructor(arg = {}) {\n    super(arg);\n    this.init();\n  }\n\n  init() {\n    this.x = d3.scaleUtc();\n    this.y = d3.scaleLinear();\n    this.line = d3.line();\n\n    this.path = this.graph.append(\"path\").attr(\"class\", \"path\");\n\n    this.updateScaleRanges();\n  }\n\n  initializeTipListeners(container, hoverClass) {\n    this.lineGroup = this.graph.append(\"g\").attr(\"opacity\", 0);\n    this.xLine = this.lineGroup.append(\"line\").attr(\"class\", \"dotted-line\");\n    this.yLine = this.lineGroup.append(\"line\").attr(\"class\", \"dotted-line\");\n\n    // TODO: Move to Data Viz Class? Extremely similar generations, but would need to handle data difs\n    function handleMouseOver(e) {\n      if (!e.target.classList.contains(hoverClass)) return;\n\n      const data = d3.select(e.target).data()[0];\n      const tipCont = this.tipCont._groups[0][0];\n\n      tipCont.querySelector(\".tip-header\").textContent =\n        data.time_class[0].toUpperCase() + data.time_class.slice(1);\n      tipCont.querySelector(\".tip-subheader\").textContent = `${\n        data.date.getMonth() + 1\n      }/${data.date.getDate()}/${data.date.getFullYear()}`;\n      tipCont.querySelector(\n        \".tip-body\"\n      ).textContent = `Average Rating: ${Math.trunc(data.rating)}`;\n\n      const leftShift =\n        this.x(data.date) - 53 + this.dims.graph.marginLeft + \"px\";\n      const topShift =\n        this.y(data.rating) + this.dims.graph.marginTop - 25 + \"px\";\n\n      this.tipCont.style(\"left\", leftShift);\n      this.tipCont.style(\"top\", topShift);\n      this.tipCont.style(\"display\", \"block\");\n\n      this.xLine\n        .attr(\"x1\", this.x(data.date))\n        .attr(\"y1\", this.dims.graph.height)\n        .attr(\"x2\", this.x(data.date))\n        .attr(\"y2\", this.y(data.rating));\n      this.yLine\n        .attr(\"x1\", 0)\n        .attr(\"y1\", this.y(data.rating))\n        .attr(\"x2\", this.x(data.date))\n        .attr(\"y2\", this.y(data.rating));\n\n      this.lineGroup.attr(\"opacity\", 1);\n    }\n\n    container.addEventListener(\"mouseover\", handleMouseOver.bind(this));\n    container.addEventListener(\"mouseout\", this.handleMouseOut.bind(this));\n  }\n\n  handleMouseOut(e) {\n    this.tipCont.style(\"display\", \"none\");\n    this.lineGroup.attr(\"opacity\", 0);\n  }\n\n  updateGraphData(data) {\n    if (!data) data = this.data;\n    if (!data) return;\n    data = this.filterData(data);\n\n    this.getDims();\n    this.setDims();\n    this.updateScaleRanges();\n    this.updateScaleDomains(data);\n    this.line.x((d) => this.x(d.date)).y((d) => this.y(d.rating));\n\n    // Select circles and join data\n    const circles = this.graph.selectAll(\"circle\").data(data);\n\n    // Remove unneeded circles from exit selection\n    circles.exit().remove();\n\n    // Update existing circles on DOM\n    circles\n      .transition()\n      .duration(500)\n      .attr(\"cx\", (d) => this.x(d.date))\n      .attr(\"cy\", (d) => this.y(d.rating));\n\n    // Add new circles in enter selection\n    circles\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"circle\")\n      .attr(\"cx\", (d) => this.x(d.date))\n      .attr(\"cy\", (d) => this.y(d.rating))\n      .attr(\"r\", \"5\")\n      .attr(\"fill\", this.colors[1]);\n\n    // Create line path\n    this.path.data([data]).attr(\"stroke\", this.colors[0]).attr(\"d\", this.line);\n\n    // Add axes\n    const xAxis = d3\n      .axisBottom(this.x)\n      .ticks(10)\n      .tickFormat((d) => `${monthRef[d.getMonth()]}. ${d.getDate() + 1}`);\n\n    this.xAxisGroup\n      .call(xAxis)\n      .attr(\"class\", \"axis\")\n      .selectAll(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-45)\");\n\n    const yAxis = d3\n      .axisLeft(this.y)\n      .ticks(6)\n      .tickFormat((d) => d.toString());\n    this.yAxisGroup.call(yAxis).attr(\"class\", \"axis\");\n  }\n\n  updateScaleDomains(data) {\n    this.x.domain(d3.extent(data, (d) => d.date));\n    this.y.domain(d3.extent(data, (d) => d.rating));\n  }\n}\n","\"use strict\";\n\nimport * as d3 from \"https://cdn.jsdelivr.net/npm/d3@7/+esm\";\nimport DataViz from \"../data-viz.js\";\n\nexport default class ScatterPlot extends DataViz {\n  constructor(arg = {}) {\n    super(arg);\n    this.init();\n  }\n\n  init() {\n    this.x = d3.scaleLinear();\n    this.y = d3.scaleLinear();\n\n    this.updateScaleRanges();\n\n    // Create regression line groups\n    this.winRegGroup = this.graph.append(\"g\");\n    this.loseRegGroup = this.graph.append(\"g\");\n  }\n\n  updateGraphData(data) {\n    if (!data) data = this.data;\n    if (!data) return;\n    data = this.filterData(data);\n\n    this.getDims();\n    this.setDims();\n    this.updateScaleRanges();\n    this.updateScaleDomains(data);\n\n    // Select existing circles and join data\n    const circles = this.graph.selectAll(\"circle\").data(data);\n\n    // Remove from exit selection\n    circles.exit().remove();\n\n    // Update circles already on DOM\n    circles\n      .attr(\"fill\", (d) => this.color(d.result))\n      .attr(\"cx\", (d) => this.x(d.match_length))\n      .attr(\"cy\", (d) => this.y(d.num_moves));\n\n    // Add circles from the enter selection\n    circles\n      .enter()\n      .append(\"circle\")\n      .attr(\"fill\", (d) => this.color(d.result))\n      .attr(\"cx\", (d) => this.x(d.match_length))\n      .attr(\"cy\", (d) => this.y(d.num_moves))\n      .attr(\"r\", 6);\n\n    // Add axes\n    const xAxis = d3.axisBottom(this.x);\n    this.xAxisGroup.call(xAxis).attr(\"class\", \"axis\");\n\n    const yAxis = d3.axisLeft(this.y).ticks(6);\n    this.yAxisGroup.call(yAxis).attr(\"class\", \"axis\");\n\n    // Create/Update regression lines\n    const xExtent = d3.extent(data, (d) => d.match_length);\n\n    this.createTrendLine({\n      container: this.winRegGroup,\n      data: data.filter((d) => d.result === \"win\"),\n      x: \"match_length\",\n      y: \"num_moves\",\n      xExtent: xExtent,\n    }).attr(\"stroke\", this.color(\"win\"));\n\n    this.createTrendLine({\n      container: this.loseRegGroup,\n      data: data.filter((d) => d.result === \"lose\"),\n      x: \"match_length\",\n      y: \"num_moves\",\n      xExtent: xExtent,\n    }).attr(\"stroke\", this.color(\"lose\"));\n  }\n\n  updateScaleDomains(data) {\n    this.x.domain(d3.extent(data, (d) => d.match_length));\n    this.y.domain(d3.extent(data, (d) => d.num_moves));\n  }\n}\n","\"use strict\";\n\nimport * as d3 from \"https://cdn.jsdelivr.net/npm/d3@7/+esm\";\nimport DataViz from \"../data-viz.js\";\n\nexport default class StackedBarChart extends DataViz {\n  constructor(arg = {}) {\n    super(arg);\n    this.init();\n  }\n\n  init() {\n    this.x = d3.scaleLinear();\n    this.y = d3.scaleBand();\n\n    // Each key represents a stack in each bar (e.g., Wins, Draws, Losses) and has its own group to which the bars (rects) will be appended.\n    this.keys.forEach(() => this.graph.append(\"g\").attr(\"class\", \"bar-group\"));\n\n    this.updateScaleRanges();\n  }\n\n  createStack(data, keys) {\n    const stack = d3.stack().keys(keys)(data);\n    stack.forEach((data, i) => {\n      data.forEach((d) => (d.key = keys[i]));\n    });\n\n    return stack;\n  }\n\n  initializeTipListeners(container, hoverClass) {\n    // TODO: Move to Data Viz Class? Extremely similar generations, but would need to handle data difs\n    function handleMouseOver(e) {\n      if (!e.target.classList.contains(hoverClass)) return;\n\n      const data = d3.select(e.target).data()[0];\n      const tipCont = this.tipCont._groups[0][0];\n\n      tipCont.querySelector(\".tip-header\").textContent = data.data.opening;\n      tipCont.querySelector(\".tip-subheader\").textContent = data.data.moves;\n      tipCont.querySelector(\".tip-body\").textContent =\n        data.key[0].toUpperCase() +\n        data.key.slice(1) +\n        `: ${data.data[data.key]}`;\n\n      const rectMiddle = this.x(data[0] + data[1]) / 2;\n      const leftShift = rectMiddle + this.dims.graph.marginLeft - 50 + \"px\";\n      const topShift =\n        this.y(data.data.code) + this.dims.graph.marginTop - 20 + \"px\";\n\n      this.tipCont.style(\"left\", leftShift);\n      this.tipCont.style(\"top\", topShift);\n      this.tipCont.style(\"display\", \"block\");\n    }\n\n    container.addEventListener(\"mouseover\", handleMouseOver.bind(this));\n    container.addEventListener(\"mouseout\", this.handleMouseOut.bind(this));\n  }\n\n  updateGraphData(data) {\n    if (!data) data = this.data;\n    if (!data) return;\n    data = this.filterData(data);\n    data = this.sortData(data);\n\n    this.getDims();\n    this.setDims();\n    this.updateScaleRanges();\n    this.updateScaleDomains(data);\n\n    const stack = this.createStack(data, this.keys);\n\n    // Update data on bar groups\n    const barGroups = this.graph.selectAll(\".bar-group\").data(stack);\n\n    // Join data within each group for the bars\n    const bars = barGroups.selectAll(\".bar\").data((d) => d);\n\n    // Remove unneeded bars within the group (if required)\n    bars.exit().remove();\n\n    // Update existing bars on DOM\n    bars\n      .attr(\"fill\", (d) => this.color(d.key))\n      .transition()\n      .duration(500)\n      .attr(\"width\", (d) => this.x(d[1] - d[0]))\n      .attr(\"height\", this.y.bandwidth)\n      .attr(\"x\", (d) => this.x(d[0]))\n      .attr(\"y\", (d) => this.y(d.data.code));\n\n    // Add rects from enter selection\n    bars\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"fill\", (d) => this.color(d.key))\n      .transition()\n      .duration(500)\n      .attr(\"width\", (d) => this.x(d[1] - d[0]))\n      .attr(\"height\", this.y.bandwidth)\n      .attr(\"x\", (d) => this.x(d[0]))\n      .attr(\"y\", (d) => this.y(d.data.code));\n\n    // TODO: Helper function?\n    // Create axis label reference\n    const ecoReference = new Map();\n    data.forEach((d) =>\n      ecoReference.set(d.code, {\n        name: d.opening,\n        moves: d.moves,\n      })\n    );\n\n    // Generate y-axis\n    const yAxis = d3\n      .axisLeft(this.y)\n      .tickFormat((d) => ecoReference.get(d).name);\n    this.yAxisGroup.call(yAxis).attr(\"class\", \"axis\");\n  }\n\n  updateScaleDomains(data) {\n    this.x.domain([0, d3.max(data, (d) => d.total)]);\n    this.y.domain(data.map((d) => d.code)).padding(this.dims.graph.padding);\n  }\n}\n","\"use strict\";\n\nimport * as d3 from \"https://cdn.jsdelivr.net/npm/d3@7/+esm\";\n\nexport default class DataViz {\n  constructor(arg = {}) {\n    const { canvasId, colors, filterGroups, heading, keys, sortGroups } = arg;\n\n    this.canvas = d3.select(canvasId);\n    this.colors = colors || [\"#c92a2a\", \"#efbfbf\", \"#791919\"];\n    this.keys = keys || [];\n    this.data = null;\n\n    this.createHeading(heading);\n    this.graphOptions = document.createElement(\"div\");\n    this.graphOptions.classList.add(\"graph-options\");\n    this.canvas._groups[0][0].before(this.graphOptions);\n\n    this.svg = this.canvas.append(\"svg\").attr(\"class\", \"data-viz\");\n    this.graph = this.svg.append(\"g\").attr(\"class\", \"graph\");\n    this.xAxisGroup = this.graph.append(\"g\");\n    this.yAxisGroup = this.graph.append(\"g\");\n\n    this.color = d3.scaleOrdinal(this.colors).domain(this.keys);\n\n    this.dims = { canvas: {}, graph: {} };\n    this.getDims();\n    this.setDims();\n\n    this.createGraphOptions(\"filter\", filterGroups);\n    this.createGraphOptions(\"sort\", sortGroups);\n\n    this.canvas._groups[0][0].parentElement.addEventListener(\n      \"click\",\n      this.handleClicks.bind(this)\n    );\n  }\n\n  bindData(data) {\n    this.data = data;\n    this.updateGraphData(data);\n  }\n\n  createGraphOptions(type, groups) {\n    if (type !== \"sort\" && type !== \"filter\") return;\n    if (groups.length < 1) return;\n\n    const title = type === \"sort\" ? \"Sort by\" : \"Filter on\";\n\n    // Filter: [[\"color\", [\"white\", \"black\"]]]\n    // Sort:   [[\"most\", [\"total\", \"wins\", \"losses\"]]]\n    const groupEls = groups.map((group) => {\n      const groupEl = document.createElement(\"div\");\n      groupEl.classList.add(\"options-group\");\n      groupEl.dataset[type] = group[0];\n      groupEl.dataset.title = title;\n\n      const optionEls = group[1].map((option) => {\n        const optionEl = document.createElement(\"button\");\n        optionEl.classList.add(\"btn\", \"btn--option\", type);\n        optionEl.dataset[type] = option;\n        optionEl.textContent = option[0].toUpperCase() + option.slice(1);\n        return optionEl;\n      });\n      optionEls[0].classList.add(\"active\");\n      groupEl.append(...optionEls);\n\n      return groupEl;\n    });\n\n    this.graphOptions.append(...groupEls);\n  }\n\n  createAxisLabel(arg = {}) {\n    const { x, y } = arg;\n\n    const xAxisTitle = document.createElement(\"p\");\n    xAxisTitle.classList.add(\"axis-title\", \"axis-title--x\");\n    xAxisTitle.textContent = x;\n\n    const yAxisTitle = document.createElement(\"p\");\n    yAxisTitle.classList.add(\"axis-title\", \"axis-title--y\");\n    yAxisTitle.textContent = y;\n\n    this.canvas._groups[0][0].append(xAxisTitle, yAxisTitle);\n  }\n\n  createHeading(str) {\n    if (!str) return;\n\n    const heading = document.createElement(\"h3\");\n    heading.classList.add(\"heading-tertiary\", \"canvas-heading\");\n    heading.textContent = str;\n\n    this.canvas._groups[0][0].parentElement.prepend(heading);\n  }\n\n  createLegend(shape, pos = \"after\") {\n    const legendContainer = document.createElement(\"div\");\n    legendContainer.classList.add(\"legend-container\");\n    if (pos === \"after\") this.canvas._groups[0][0].after(legendContainer);\n    else this.canvas._groups[0][0].before(legendContainer);\n\n    this.keys.forEach((key) => {\n      const keyGroup = document.createElement(\"div\");\n      keyGroup.classList.add(\"key-group\");\n\n      const shapeEl = document.createElement(\"div\");\n      shapeEl.classList.add(`legend-shape--${shape}`);\n      shapeEl.style.backgroundColor = this.color(key);\n\n      const text = document.createElement(\"p\");\n      text.classList.add(\"legend-text\");\n      text.textContent = `- ${key[0].toUpperCase() + key.slice(1)}`;\n\n      keyGroup.append(shapeEl, text);\n      legendContainer.append(keyGroup);\n    });\n\n    return this.legendGroup;\n  }\n\n  createTrendLine(arg) {\n    // TODO: Accept line elements instead of container?\n    const { container, data, x, y, xExtent } = arg;\n\n    container.selectAll(\"line\").remove();\n\n    if (!data.length) return container.append(\"line\");\n    // Variables required for slope intercept equation\n    let n = 0;\n    let sumXY = 0;\n    let sumX = 0;\n    let sumY = 0;\n    let sumXSq = 0;\n\n    for (let el of data) {\n      n++;\n      sumX += el[x];\n      sumY += el[y];\n      sumXY += el[x] * el[y];\n      sumXSq += Math.pow(el[x], 2);\n    }\n\n    const m = parseFloat(\n      ((n * sumXY - sumX * sumY) / (n * sumXSq - Math.pow(sumX, 2))).toFixed(4)\n    );\n    const b = Math.round((sumY - m * sumX) / n);\n    const slopeInter = (x) => m * x + b;\n\n    return container\n      .append(\"line\")\n      .attr(\"x1\", this.x(xExtent[0]))\n      .attr(\"x2\", this.x(xExtent[1]))\n      .attr(\"y1\", this.y(slopeInter(xExtent[0])))\n      .attr(\"y2\", this.y(slopeInter(xExtent[1])));\n  }\n\n  initializeTooltip(container, hoverClass) {\n    if (this.tipCont) return;\n\n    this.tipCont = container.append(\"div\").attr(\"class\", \"tooltip-container\");\n\n    const tipContent = this.tipCont\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip-content\");\n    tipContent.append(\"p\").attr(\"class\", \"tip-header\");\n    tipContent.append(\"p\").attr(\"class\", \"tip-subheader\");\n    tipContent.append(\"p\").attr(\"class\", \"tip-body\");\n\n    // TODO: Only exists on children class\n    this.initializeTipListeners(container._groups[0][0], hoverClass);\n  }\n\n  filterData(data) {\n    const filters = [];\n    const filteredData = [];\n\n    this.graphOptions\n      .querySelectorAll(\".options-group[data-filter]\")\n      .forEach((group) => {\n        const property = group.dataset.filter;\n        const value = group.querySelector(\".active\").dataset.filter;\n        filters.push([property, value]);\n      });\n\n    data.forEach((el) => {\n      let match = true;\n      filters.forEach((filter) => {\n        if (el[filter[0]] !== filter[1]) match = false;\n      });\n      if (match) filteredData.push(el);\n    });\n\n    return filteredData;\n  }\n\n  getDims() {\n    this.dims.canvas.height = parseInt(this.canvas.style(\"height\"));\n    this.dims.canvas.width = parseInt(this.canvas.style(\"width\"));\n    this.dims.graph.marginTop = parseInt(this.graph.style(\"margin-top\"));\n    this.dims.graph.marginRight = parseInt(this.graph.style(\"margin-right\"));\n    this.dims.graph.marginBottom = parseInt(this.graph.style(\"margin-bottom\"));\n    this.dims.graph.marginLeft = parseInt(this.graph.style(\"margin-left\"));\n    this.dims.graph.padding = parseFloat(this.graph.style(\"padding\"));\n\n    this.dims.graph.width =\n      this.dims.canvas.width -\n      this.dims.graph.marginLeft -\n      this.dims.graph.marginRight;\n    this.dims.graph.height =\n      this.dims.canvas.height -\n      this.dims.graph.marginTop -\n      this.dims.graph.marginBottom;\n  }\n\n  handleClicks(e) {\n    const clicked = e.target;\n    if (clicked.nodeName !== \"BUTTON\") return;\n    if (clicked.classList.contains(\"active\")) return;\n\n    const siblings = clicked.parentElement.childNodes;\n    siblings.forEach((sib) => sib.classList.remove(\"active\"));\n    clicked.classList.add(\"active\");\n\n    // TODO: Function only exists on child class\n    this.updateGraphData(this.data);\n  }\n\n  handleMouseOut(e) {\n    this.tipCont.style(\"display\", \"none\");\n  }\n\n  setDims() {\n    this.svg\n      .attr(\"width\", this.dims.canvas.width)\n      .attr(\"height\", this.dims.canvas.height);\n    this.graph\n      .attr(\"width\", this.dims.graph.width)\n      .attr(\"height\", this.dims.graph.height)\n      .attr(\n        \"transform\",\n        `translate(${this.dims.graph.marginLeft}, ${this.dims.graph.marginTop})`\n      );\n\n    this.xAxisGroup.attr(\n      \"transform\",\n      `translate(0, ${this.dims.graph.height})`\n    );\n  }\n\n  sortData(data) {\n    const sortBy =\n      this.graphOptions.querySelector(\".btn.sort.active\").dataset.sort;\n    data.sort((a, b) => a[sortBy] - b[sortBy]);\n\n    return data;\n  }\n\n  updateGraphData(data) {\n    // Handled by child\n  }\n\n  updateScaleRanges() {\n    this.x.range([0, this.dims.graph.width]);\n    this.y.range([this.dims.graph.height, 0]);\n  }\n}\n","\"use strict\";\n\nexport default function (type, message) {\n  if (!type || !message) throw new Error(\"Alert requires a type and message\");\n\n  const body = document.querySelector(\"body\");\n\n  const alert = document.createElement(\"div\");\n  alert.classList.add(\"alert\", `alert--${type}`);\n\n  const content = document.createElement(\"p\");\n  content.classList.add(\"content\");\n  content.textContent = message;\n\n  alert.append(content);\n  body.append(alert);\n\n  setTimeout(() => alert.remove(), 5000);\n}\n","\"use strict\";\n\nexport async function changePassword(obj) {\n  const url = \"/api/v1/users/change-my-password\";\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify(obj);\n\n  return await fetch(url, {\n    method: \"PATCH\",\n    headers,\n    body,\n  });\n}\n\nexport async function getDurationStats(start, end) {\n  const url = `/api/v1/matches/duration-stats/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function getOpeningStats(start, end) {\n  const url = `/api/v1/matches/opening-stats/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function getRatingTrends(start, end) {\n  const url = `/api/v1/matches/rating-trends/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function getRefresh(start, end) {\n  const url = `/api/v1/matches/refresh/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function login(obj) {\n  const url = \"/api/v1/users/login\";\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify(obj);\n\n  return await fetch(url, {\n    method: \"POST\",\n    headers,\n    body,\n  });\n}\n\nexport async function logout() {\n  const url = \"/api/v1/users/logout\";\n\n  return await fetch(url);\n}\n\nexport async function signup(obj) {\n  const url = \"/api/v1/users/signup\";\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify(obj);\n\n  return await fetch(url, {\n    method: \"POST\",\n    headers,\n    body,\n  });\n}\n","\"use strict\";\n\nexport function clearInput(form) {\n  const inputs = form.querySelectorAll(\"input\");\n  inputs.forEach((input) => (input.value = \"\"));\n}\n\nexport function disableForm(form, message) {\n  const fieldset = form.querySelector(\"fieldset\");\n  const submitButton = form.querySelector(\".btn-submit\");\n\n  fieldset.setAttribute(\"disabled\", \"true\");\n  submitButton.setAttribute(\"disabled\", \"true\");\n  submitButton.textContent = message;\n}\n\nexport function enableForm(form, message) {\n  const fieldset = form.querySelector(\"fieldset\");\n  const submitButton = form.querySelector(\".btn-submit\");\n\n  fieldset.removeAttribute(\"disabled\");\n  submitButton.removeAttribute(\"disabled\");\n  submitButton.textContent = message;\n}\n","module.exports = import(\"https://cdn.jsdelivr.net/npm/d3@7/+esm\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./app/src/js/dashboard.js\");\n",""],"names":[],"sourceRoot":""}