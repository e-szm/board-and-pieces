{"version":3,"file":"bundle_account.js","mappings":"mBAgBO,SAASA,EAAWC,EAAMC,GAC/B,MAAMC,EAAWF,EAAKG,cAAc,YAC9BC,EAAeJ,EAAKG,cAAc,eAExCD,EAASG,gBAAgB,YACzBD,EAAaC,gBAAgB,YAC7BD,EAAaE,YAAcL,CAC7B,CCrBe,SAAS,EAACM,EAAMN,GAC7B,IAAKM,IAASN,EAAS,MAAM,IAAIO,MAAM,qCAEvC,MAAMC,EAAOC,SAASP,cAAc,QAE9BQ,EAAQD,SAASE,cAAc,OACrCD,EAAME,UAAUC,IAAI,QAAS,UAAUP,KAEvC,MAAMQ,EAAUL,SAASE,cAAc,KACvCG,EAAQF,UAAUC,IAAI,WACtBC,EAAQT,YAAcL,EAEtBU,EAAMK,OAAOD,GACbN,EAAKO,OAAOL,GAEZM,YAAW,IAAMN,EAAMO,UAAU,IACnC,CCZAC,eAAeC,EAAqBC,GAClCA,EAAEC,iBFAG,SAAqBtB,EAAMC,GAChC,MAAMC,EAAWF,EAAKG,cAAc,YAC9BC,EAAeJ,EAAKG,cAAc,eAExCD,EAASqB,aAAa,WAAY,QAClCnB,EAAamB,aAAa,WAAY,QACtCnB,EAAaE,YEJK,aFKpB,CELEkB,CAAYC,MAEZ,MAAMC,EAAchB,SAASiB,eAAe,oBAAoBC,MAC1DC,EAAcnB,SAASiB,eAAe,gBAAgBC,MACtDE,EAAqBpB,SAASiB,eAAe,oBAAoBC,MAEvE,GAAIC,IAAgBC,EAGlB,OAFA,EAAM,QAAS,8BACf/B,EAAW0B,KAAM,mBAInB,MAAMM,QCnBDZ,eAA8Ba,GACnC,MACMC,EAAU,IAAIC,QACpBD,EAAQjB,OAAO,eAAgB,oBAC/B,MAAMP,EAAO0B,KAAKC,UAAUJ,GAE5B,aAAaK,MALD,mCAKY,CACtBC,OAAQ,QACRL,UACAxB,QAEJ,CDQoB8B,CAAe,CAC/Bb,cACAG,cACAC,uBAEIU,QAAaT,EAAIU,OAEvB,IAAKV,EAAIW,IAAqB,MAAfX,EAAIY,OAGjB,OAFA,EAAM,QAASH,EAAKvC,cACpBF,EAAW0B,KAAM,mBAInB,EAAM,UAAW,kCACNA,KFhCSmB,iBAAiB,SAC9BC,SAASC,GAAWA,EAAMlB,MAAQ,KEgCzC7B,EAAW0B,KAAM,mBACjBsB,SAASC,QAAO,EAClB,EAEA,WACE,MAAMC,EAAevC,SAASP,cAAc,mBACvC8C,EAKLA,EAAaC,iBAAiB,SAAU9B,GAJtC,EAAM,QAAS,gCAKnB,CAEA+B,E","sources":["webpack://knightsedge/./app/src/js/utils/formHelper.js","webpack://knightsedge/./app/src/js/utils/alert.js","webpack://knightsedge/./app/src/js/account.js","webpack://knightsedge/./app/src/js/utils/api.js"],"sourcesContent":["\"use strict\";\n\nexport function clearInput(form) {\n  const inputs = form.querySelectorAll(\"input\");\n  inputs.forEach((input) => (input.value = \"\"));\n}\n\nexport function disableForm(form, message) {\n  const fieldset = form.querySelector(\"fieldset\");\n  const submitButton = form.querySelector(\".btn-submit\");\n\n  fieldset.setAttribute(\"disabled\", \"true\");\n  submitButton.setAttribute(\"disabled\", \"true\");\n  submitButton.textContent = message;\n}\n\nexport function enableForm(form, message) {\n  const fieldset = form.querySelector(\"fieldset\");\n  const submitButton = form.querySelector(\".btn-submit\");\n\n  fieldset.removeAttribute(\"disabled\");\n  submitButton.removeAttribute(\"disabled\");\n  submitButton.textContent = message;\n}\n","\"use strict\";\n\nexport default function (type, message) {\n  if (!type || !message) throw new Error(\"Alert requires a type and message\");\n\n  const body = document.querySelector(\"body\");\n\n  const alert = document.createElement(\"div\");\n  alert.classList.add(\"alert\", `alert--${type}`);\n\n  const content = document.createElement(\"p\");\n  content.classList.add(\"content\");\n  content.textContent = message;\n\n  alert.append(content);\n  body.append(alert);\n\n  setTimeout(() => alert.remove(), 5000);\n}\n","\"use strict\";\n\nimport { clearInput, disableForm, enableForm } from \"./utils/formHelper.js\";\nimport { changePassword } from \"./utils/api.js\";\nimport alert from \"./utils/alert.js\";\n\nasync function handlePasswordChange(e) {\n  e.preventDefault();\n\n  disableForm(this, \"Changing...\");\n\n  const oldPassword = document.getElementById(\"current-password\").value;\n  const newPassword = document.getElementById(\"new-password\").value;\n  const newPasswordConfirm = document.getElementById(\"confirm-password\").value;\n\n  if (newPassword !== newPasswordConfirm) {\n    alert(\"error\", \"Passwords must match.\");\n    enableForm(this, \"Change Password\");\n    return;\n  }\n\n  const res = await changePassword({\n    oldPassword,\n    newPassword,\n    newPasswordConfirm,\n  });\n  const data = await res.json();\n\n  if (!res.ok || res.status !== 200) {\n    alert(\"error\", data.message);\n    enableForm(this, \"Change Password\");\n    return;\n  }\n\n  alert(\"success\", \"Password changed successfully!\");\n  clearInput(this);\n  enableForm(this, \"Change Password\");\n  location.reload(true);\n}\n\nfunction init() {\n  const passwordForm = document.querySelector(\".form--password\");\n  if (!passwordForm) {\n    alert(\"error\", \"Oops! Please try again later.\");\n    return;\n  }\n\n  passwordForm.addEventListener(\"submit\", handlePasswordChange);\n}\n\ninit();\n","\"use strict\";\n\nexport async function changePassword(obj) {\n  const url = \"/api/v1/users/change-my-password\";\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify(obj);\n\n  return await fetch(url, {\n    method: \"PATCH\",\n    headers,\n    body,\n  });\n}\n\nexport async function getDurationStats(start, end) {\n  const url = `/api/v1/matches/duration-stats/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function getOpeningStats(start, end) {\n  const url = `/api/v1/matches/opening-stats/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function getRatingTrends(start, end) {\n  const url = `/api/v1/matches/rating-trends/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function getRefresh(start, end) {\n  const url = `/api/v1/matches/refresh/start/${start}/end/${end}`;\n\n  return await fetch(url);\n}\n\nexport async function login(obj) {\n  const url = \"/api/v1/users/login\";\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify(obj);\n\n  return await fetch(url, {\n    method: \"POST\",\n    headers,\n    body,\n  });\n}\n\nexport async function logout() {\n  const url = \"/api/v1/users/logout\";\n\n  return await fetch(url);\n}\n\nexport async function signup(obj) {\n  const url = \"/api/v1/users/signup\";\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify(obj);\n\n  return await fetch(url, {\n    method: \"POST\",\n    headers,\n    body,\n  });\n}\n"],"names":["enableForm","form","message","fieldset","querySelector","submitButton","removeAttribute","textContent","type","Error","body","document","alert","createElement","classList","add","content","append","setTimeout","remove","async","handlePasswordChange","e","preventDefault","setAttribute","disableForm","this","oldPassword","getElementById","value","newPassword","newPasswordConfirm","res","obj","headers","Headers","JSON","stringify","fetch","method","changePassword","data","json","ok","status","querySelectorAll","forEach","input","location","reload","passwordForm","addEventListener","init"],"sourceRoot":""}